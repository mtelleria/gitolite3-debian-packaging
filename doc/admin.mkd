# gitolite administration

## #server server-side administration

The following activities require command line access to the server.  They are
usually one-time or rarely done activities.

  * Changing anything in the [rc][] file.
  * Installing custom [hooks][], whether to all repos or just some repos.
  * Moving [existing][] repos into gitolite control.

Please read the [WARNINGS][] page first.

## #adminrepo access control via the gitolite-admin repo

Most day-to-day administration of a gitolite site happens like this:

  * [clone][] the gitolite-admin repo to your workstation
  * make appropriate changes
  * add, commit, and push

### #conf the conf/gitolite.conf file

Most of gitolite's power is in the conf/gitolite.conf file, which specifies
detailed access control for repos.  Everything except [adding users][users]
happens from this file.

Here is an example of a simple conf/gitolite.conf file.

        @staff              =   dilbert alice           # line 1
        @projects           =   foo bar                 # line 2

        repo @projects baz                              # line 3
            RW+             =   @staff                  # line 4
            -       master  =   ashok                   # line 5
            RW              =   ashok                   # line 6
            R               =   wally                   # line 7

            config hooks.emailprefix = '[%GL_REPO] '    # line 8

Use the following links to learn more:

  * The basic [syntax][] -- comments, whitespace, include files, etc.
  * Defining [groups][], as in lines 1 and 2.
  * Adding and removing [users][].
  * Adding and removing [repos][], as in line 3.
  * Defining access [rules][], as in lines 4, 5, 6, and 7.
  * Gitolite [options][].
  * [Git config][git-config] keys and values, as in line 8.
  * ["Wild"][wild] repos -- ad hoc, user-created, repos.
